#!/usr/bin/env bash

# store data to sqlite3

handle_sqlite() {
	
	COL_RASTER_OR_VECTOR_TYPE

	COL_TILE_FORMAT='png'
	if [[ $COL_RASTER_OR_VECTOR_TYPE = 'vector' ]]; then
		COL_TILE_FORMAT='pbf'
	fi

	COL_LAYER_ID=$(python3 $MINTCAST_PATH/python/macro_string/main.py layer_name_to_layer_id $LAYERNAME $COL_RASTER_OR_VECTOR_TYPE $COL_TILE_FORMAT)
	COL_LAYER_NAME=$(python3 $MINTCAST_PATH/python/macro_string/main.py gen_layer_name $LAYERNAME)
	COL_SOURCE_LAYER=$LAYERNAME
	COL_ORIGINIAL_ID=0
	COL_HAS_DATA=1
	COL_HAS_TIMELINE=0
	COL_MAXZOOM=14
	COL_MINZOOM=3
	COL_BOUNDS=$COL_BOUNDS
	
	COL_START_TIME=$START_TIME
	COL_END_TIME=$END_TIME

	COL_SERVER=''
	COL_TILE_URL=''
	COL_STYLE_TYPE=''
	COL_MAPPING=''

	# TODO
	COL_MBTILES_FILENAM=$COL_MBTILES_FILENAM
	COL_DIRECTORY_FORMA=$COL_DIRECTORY_FORMA
	COL_JSON_FILENAM=$COL_JSON_FILENAM
	COL_LEGEND_TYP=$COL_LEGEND_TYP
	COL_LEGEN=$COL_LEGEN
	COL_VALUE_ARRA=$COL_VALUE_ARRA
	COL_COLORMA=$COL_COLORMA
	COL_ORIGINAL_DATASET_BOUND=$COL_ORIGINAL_DATASET_BOUND
	COL_CKAN_UR=$COL_CKAN_UR


	python3 $MINTCAST_PATH/python/sqlite3_curd/main.py insert layer \
	"null, '$COL_LAYER_ID', '$COL_RASTER_OR_VECTOR_TYPE', '$COL_TILE_FORMAT', '$COL_LAYER_NAME', '$COL_SOURCE_LAYER', $COL_ORIGINIAL_ID, $COL_HAS_DATA, $COL_HAS_TIMELINE, $COL_MAXZOOM, $COL_MINZOOM, '$COL_BOUNDS', '$COL_MBTILES_FILENAME', '$COL_DIRECTORY_FORMAT', '$COL_START_TIME', '$COL_END_TIME', '$COL_JSON_FILENAME', '$COL_SERVER', '$COL_TILE_URL', '$COL_STYLE_TYPE', '$COL_LEGEND_TYPE', '$COL_LEGEND', '$COL_VALUE_ARRAY', '$COL_COLORMAP', '$COL_ORIGINAL_DATASET_BOUNDS', '$COL_MAPPING', '$COL_CKAN_URL', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP"
}

	
